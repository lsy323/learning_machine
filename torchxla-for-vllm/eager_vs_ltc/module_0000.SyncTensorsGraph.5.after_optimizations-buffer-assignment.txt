BufferAssignment:
allocation 0: size 32, output shape is |(f32[3], f32[3])|, maybe-live-out:
 value: <6 tuple.4{} @0> (size=32,offset=0): (f32[3]{0:T(128)}, f32[3]{0:T(128)})
allocation 1: size 512, maybe-live-out:
 value: <3 copy-start{0} @0> (size=512,offset=0): f32[3]{0:T(128)}
allocation 2: size 512, maybe-live-out:
 value: <5 abs.3 @0> (size=512,offset=0): f32[3]{0:T(128)}
allocation 3: size 512, parameter 0, shape |f32[3]| at ShapeIndex {}:
 value: <0 p0.1 @0> (size=512,offset=0): f32[3]{0:T(128)}
allocation 4: size 512, color 1, preallocated-temp:
 value: <1 sine.2 @1> (size=512,offset=0): f32[3]{0:T(128)S(1)}
allocation 5: size 32, preallocated-temp:
 value: <2 copy-start{} @0> (size=32,offset=0): (f32[3]{0:T(128)}, f32[3]{0:T(128)S(1)}, u32[]{:S(2)})
allocation 6: size 4, color 2, preallocated-temp:
 value: <4 copy-start{2} @2> (size=4,offset=0): u32[]{:S(2)}

Total bytes used: 2116 (2.1KiB)

Used values:
<0 p0.1 @0>
 positions:
  p0.1
 uses:
  sine.2, operand 0
 from instruction: %p0.1 = f32[3]{0:T(128)} parameter(0)
<1 sine.2 @1>
 positions:
  sine.2
  copy-start {1}
 uses:
  abs.3, operand 0
  copy-start, operand 0
  copy-done, operand 0 {1}
 from instruction: %sine.2 = f32[3]{0:T(128)S(1)} sine(f32[3]{0:T(128)} %p0.1)
<2 copy-start{} @0>
 positions:
  copy-start {}
 uses:
  copy-done, operand 0 {}
 from instruction: %copy-start = (f32[3]{0:T(128)}, f32[3]{0:T(128)S(1)}, u32[]{:S(2)}) copy-start(f32[3]{0:T(128)S(1)} %sine.2)
<3 copy-start{0} @0>
 positions:
  copy-start {0}
  tuple.4 {0}
  copy-done
 uses:
  copy-done, operand 0 {0}
  tuple.4, operand 0
 from instruction: %copy-start = (f32[3]{0:T(128)}, f32[3]{0:T(128)S(1)}, u32[]{:S(2)}) copy-start(f32[3]{0:T(128)S(1)} %sine.2)
<4 copy-start{2} @2>
 positions:
  copy-start {2}
 uses:
  copy-done, operand 0 {2}
 from instruction: %copy-start = (f32[3]{0:T(128)}, f32[3]{0:T(128)S(1)}, u32[]{:S(2)}) copy-start(f32[3]{0:T(128)S(1)} %sine.2)
<5 abs.3 @0>
 positions:
  abs.3
  tuple.4 {1}
 uses:
  tuple.4, operand 1
 from instruction: %abs.3 = f32[3]{0:T(128)} abs(f32[3]{0:T(128)S(1)} %sine.2)
<6 tuple.4{} @0>
 positions:
  tuple.4 {}
 uses:
 from instruction: %tuple.4 = (f32[3]{0:T(128)}, f32[3]{0:T(128)}) tuple(f32[3]{0:T(128)} %copy-done, f32[3]{0:T(128)} %abs.3)


HloLiveRange (max 6):
  InstructionSequence:
    0:p0.1
    1:sine.2
    2:copy-start
    3:abs.3
    4:copy-done
    5:tuple.4
  BufferLiveRange:
    p0.1{}:0-6
    sine.2{}:1-4
    copy-start{}:2-4
    copy-start{0}:2-6
    copy-start{2}:2-4
    abs.3{}:3-6
    tuple.4{}:5-6
  Live ranges at 5 (peak):
    p0.1: 12 bytes
    copy-start: 24 bytes
    abs.3: 12 bytes
    tuple.4: 16 bytes
