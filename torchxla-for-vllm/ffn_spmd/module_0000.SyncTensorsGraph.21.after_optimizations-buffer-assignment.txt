BufferAssignment:
allocation 0: size 32, output shape is |(f32[32,512,4096])|, maybe-live-out:
 value: <212 tuple{} @0> (size=32,offset=0): (f32[32,512,4096]{2,1,0:T(8,128)})
allocation 1: size 268435456, maybe-live-out:
 value: <171 convert.2 @0> (size=29360128,offset=0): bf16[4096,3584]{1,0:T(8,128)(2,1)}
 value: <211 fusion @0> (size=268435456,offset=0): f32[32,512,4096]{2,1,0:T(8,128)}
allocation 2: size 268435456, parameter 2, shape |f32[32,512,4096]| at ShapeIndex {}:
 value: <151 param @0> (size=268435456,offset=0): f32[32,512,4096]{2,1,0:T(8,128)}
allocation 3: size 58720256, parameter 1, shape |f32[3584,4096]| at ShapeIndex {}:
 value: <130 param.2 @0> (size=58720256,offset=0): f32[3584,4096]{1,0:T(8,128)}
allocation 4: size 58720256, parameter 3, shape |f32[3584,4096]| at ShapeIndex {}:
 value: <148 param.1 @0> (size=58720256,offset=0): f32[3584,4096]{1,0:T(8,128)}
allocation 5: size 58720256, parameter 0, shape |f32[4096,3584]| at ShapeIndex {}:
 value: <170 param.3 @0> (size=58720256,offset=0): f32[4096,3584]{1,0:T(8,128)}
allocation 6: size 2114011136, preallocated-temp:
 value: <132 async-collective-start{} @0> (size=64,offset=32768): (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)})
 value: <134 async-collective-start{1} @0> (size=117440512,offset=1879130112): bf16[14336,4096]{1,0:T(8,128)(2,1)}
 value: <150 all-gather.30 @0> (size=117440512,offset=939606016): bf16[14336,4096]{1,0:T(8,128)(2,1)}
 value: <152 fusion.10{} @0> (size=96,offset=0): (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)})
 value: <153 fusion.10{0} @0> (size=939524096,offset=81920): f32[32,512,14336]{2,1,0:T(8,128)}
 value: <155 fusion.10{2} @0> (size=117440512,offset=1879130112): bf16[14336,4096]{1,0:T(8,128)(2,1)}
 value: <156 fusion.10{3} @0> (size=117440512,offset=1879130112): bf16[14336,4096]{1,0:T(8,128)(2,1)}
 value: <172 copy-start{} @0> (size=32,offset=65536): (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,3584]{1,0:T(8,128)(2,1)}, u32[]{:S(2)})
 value: <175 async-collective-start.1{} @0> (size=64,offset=49152): (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)})
 value: <177 async-collective-start.1{1} @0> (size=117440512,offset=1996570624): bf16[4096,14336]{1,0:T(8,128)(2,1)}
 value: <191 async-collective-done @0> (size=117440512,offset=1879130112): bf16[14336,4096]{1,0:T(8,128)(2,1)}
 value: <192 fusion.17{} @0> (size=96,offset=16384): (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)})
 value: <193 fusion.17{0} @0> (size=939524096,offset=939606016): f32[32,512,14336]{2,1,0:T(8,128)}
 value: <195 fusion.17{2} @0> (size=117440512,offset=1996570624): bf16[4096,14336]{1,0:T(8,128)(2,1)}
 value: <196 fusion.17{3} @0> (size=117440512,offset=1996570624): bf16[4096,14336]{1,0:T(8,128)(2,1)}
 value: <210 async-collective-done.1 @0> (size=117440512,offset=1996570624): bf16[4096,14336]{1,0:T(8,128)(2,1)}
allocation 7: size 58720256, color 1, preallocated-temp:
 value: <131 convert.1 @1> (size=29360128,offset=0): bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}
 value: <133 async-collective-start{0} @1> (size=29360128,offset=0): bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}
 value: <149 convert @1> (size=29360128,offset=29360128): bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}
 value: <154 fusion.10{1} @1> (size=29360128,offset=0): bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}
 value: <173 copy-start{0} @1> (size=29360128,offset=29360128): bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}
 value: <176 async-collective-start.1{0} @1> (size=29360128,offset=29360128): bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}
 value: <194 fusion.17{1} @1> (size=29360128,offset=29360128): bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}
allocation 8: size 52, color 2, preallocated-temp:
 value: <136 async-collective-start{3} @2> (size=4,offset=0): u32[]{:S(2)}
 value: <137 async-collective-start{4} @2> (size=4,offset=4): u32[]{:S(2)}
 value: <138 async-collective-start{5} @2> (size=4,offset=8): u32[]{:S(2)}
 value: <139 async-collective-start{6} @2> (size=4,offset=12): u32[]{:S(2)}
 value: <140 async-collective-start{7} @2> (size=4,offset=16): u32[]{:S(2)}
 value: <141 async-collective-start{8} @2> (size=4,offset=20): u32[]{:S(2)}
 value: <142 async-collective-start{9} @2> (size=4,offset=24): u32[]{:S(2)}
 value: <143 async-collective-start{10} @2> (size=4,offset=28): u32[]{:S(2)}
 value: <144 async-collective-start{11} @2> (size=4,offset=32): u32[]{:S(2)}
 value: <145 async-collective-start{12} @2> (size=4,offset=36): u32[]{:S(2)}
 value: <146 async-collective-start{13} @2> (size=4,offset=40): u32[]{:S(2)}
 value: <147 async-collective-start{14} @2> (size=4,offset=44): u32[]{:S(2)}
 value: <158 fusion.10{5} @2> (size=4,offset=0): u32[]{:S(2)}
 value: <159 fusion.10{6} @2> (size=4,offset=4): u32[]{:S(2)}
 value: <160 fusion.10{7} @2> (size=4,offset=8): u32[]{:S(2)}
 value: <161 fusion.10{8} @2> (size=4,offset=12): u32[]{:S(2)}
 value: <162 fusion.10{9} @2> (size=4,offset=16): u32[]{:S(2)}
 value: <163 fusion.10{10} @2> (size=4,offset=20): u32[]{:S(2)}
 value: <164 fusion.10{11} @2> (size=4,offset=24): u32[]{:S(2)}
 value: <165 fusion.10{12} @2> (size=4,offset=28): u32[]{:S(2)}
 value: <166 fusion.10{13} @2> (size=4,offset=32): u32[]{:S(2)}
 value: <167 fusion.10{14} @2> (size=4,offset=36): u32[]{:S(2)}
 value: <168 fusion.10{15} @2> (size=4,offset=40): u32[]{:S(2)}
 value: <169 fusion.10{16} @2> (size=4,offset=44): u32[]{:S(2)}
 value: <174 copy-start{2} @2> (size=4,offset=48): u32[]{:S(2)}
 value: <179 async-collective-start.1{3} @2> (size=4,offset=0): u32[]{:S(2)}
 value: <180 async-collective-start.1{4} @2> (size=4,offset=4): u32[]{:S(2)}
 value: <181 async-collective-start.1{5} @2> (size=4,offset=8): u32[]{:S(2)}
 value: <182 async-collective-start.1{6} @2> (size=4,offset=12): u32[]{:S(2)}
 value: <183 async-collective-start.1{7} @2> (size=4,offset=16): u32[]{:S(2)}
 value: <184 async-collective-start.1{8} @2> (size=4,offset=20): u32[]{:S(2)}
 value: <185 async-collective-start.1{9} @2> (size=4,offset=24): u32[]{:S(2)}
 value: <186 async-collective-start.1{10} @2> (size=4,offset=28): u32[]{:S(2)}
 value: <187 async-collective-start.1{11} @2> (size=4,offset=32): u32[]{:S(2)}
 value: <188 async-collective-start.1{12} @2> (size=4,offset=36): u32[]{:S(2)}
 value: <189 async-collective-start.1{13} @2> (size=4,offset=40): u32[]{:S(2)}
 value: <190 async-collective-start.1{14} @2> (size=4,offset=44): u32[]{:S(2)}
 value: <198 fusion.17{5} @2> (size=4,offset=0): u32[]{:S(2)}
 value: <199 fusion.17{6} @2> (size=4,offset=4): u32[]{:S(2)}
 value: <200 fusion.17{7} @2> (size=4,offset=8): u32[]{:S(2)}
 value: <201 fusion.17{8} @2> (size=4,offset=12): u32[]{:S(2)}
 value: <202 fusion.17{9} @2> (size=4,offset=16): u32[]{:S(2)}
 value: <203 fusion.17{10} @2> (size=4,offset=20): u32[]{:S(2)}
 value: <204 fusion.17{11} @2> (size=4,offset=24): u32[]{:S(2)}
 value: <205 fusion.17{12} @2> (size=4,offset=28): u32[]{:S(2)}
 value: <206 fusion.17{13} @2> (size=4,offset=32): u32[]{:S(2)}
 value: <207 fusion.17{14} @2> (size=4,offset=36): u32[]{:S(2)}
 value: <208 fusion.17{15} @2> (size=4,offset=40): u32[]{:S(2)}
 value: <209 fusion.17{16} @2> (size=4,offset=44): u32[]{:S(2)}
allocation 9: size 4096, color 4, preallocated-temp:
 value: <135 async-collective-start{2} @4> (size=4096,offset=0): s32[2]{0:S(4)}
 value: <157 fusion.10{4} @4> (size=4096,offset=0): s32[2]{0:S(4)}
 value: <178 async-collective-start.1{2} @4> (size=4096,offset=0): s32[2]{0:S(4)}
 value: <197 fusion.17{4} @4> (size=4096,offset=0): s32[2]{0:S(4)}

Total bytes used: 2885767252 (2.69GiB)

Used values:
<130 param.2 @0>
 positions:
  param.2
 uses:
  convert.1, operand 0
 from instruction: %param.2 = f32[3584,4096]{1,0:T(8,128)} parameter(1), sharding={devices=[4,1]0,1,2,3}
<131 convert.1 @1>
 positions:
  convert.1
 uses:
  async-collective-start, operand 0
 from instruction: %convert.1 = bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} convert(f32[3584,4096]{1,0:T(8,128)} %param.2)
<132 async-collective-start{} @0>
 positions:
  async-collective-start {}
 uses:
  get-tuple-element, operand 0 {}
  get-tuple-element.1, operand 0 {}
  get-tuple-element.2, operand 0 {}
  get-tuple-element.3, operand 0 {}
  get-tuple-element.4, operand 0 {}
  get-tuple-element.5, operand 0 {}
  get-tuple-element.6, operand 0 {}
  get-tuple-element.7, operand 0 {}
  get-tuple-element.8, operand 0 {}
  get-tuple-element.9, operand 0 {}
  get-tuple-element.10, operand 0 {}
  get-tuple-element.11, operand 0 {}
  get-tuple-element.12, operand 0 {}
  get-tuple-element.13, operand 0 {}
  get-tuple-element.14, operand 0 {}
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<133 async-collective-start{0} @1>
 positions:
  async-collective-start {0}
  get-tuple-element
 uses:
  fusion.10, operand 0
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<134 async-collective-start{1} @0>
 positions:
  async-collective-start {1}
  get-tuple-element.1
 uses:
  fusion.10, operand 1
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<135 async-collective-start{2} @4>
 positions:
  async-collective-start {2}
  get-tuple-element.2
 uses:
  fusion.10, operand 2
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<136 async-collective-start{3} @2>
 positions:
  async-collective-start {3}
  get-tuple-element.3
 uses:
  fusion.10, operand 3
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<137 async-collective-start{4} @2>
 positions:
  async-collective-start {4}
  get-tuple-element.4
 uses:
  fusion.10, operand 4
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<138 async-collective-start{5} @2>
 positions:
  async-collective-start {5}
  get-tuple-element.5
 uses:
  fusion.10, operand 5
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<139 async-collective-start{6} @2>
 positions:
  async-collective-start {6}
  get-tuple-element.6
 uses:
  fusion.10, operand 6
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<140 async-collective-start{7} @2>
 positions:
  async-collective-start {7}
  get-tuple-element.7
 uses:
  fusion.10, operand 7
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<141 async-collective-start{8} @2>
 positions:
  async-collective-start {8}
  get-tuple-element.8
 uses:
  fusion.10, operand 8
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<142 async-collective-start{9} @2>
 positions:
  async-collective-start {9}
  get-tuple-element.9
 uses:
  fusion.10, operand 9
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<143 async-collective-start{10} @2>
 positions:
  async-collective-start {10}
  get-tuple-element.10
 uses:
  fusion.10, operand 10
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<144 async-collective-start{11} @2>
 positions:
  async-collective-start {11}
  get-tuple-element.11
 uses:
  fusion.10, operand 11
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<145 async-collective-start{12} @2>
 positions:
  async-collective-start {12}
  get-tuple-element.12
 uses:
  fusion.10, operand 12
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<146 async-collective-start{13} @2>
 positions:
  async-collective-start {13}
  get-tuple-element.13
 uses:
  fusion.10, operand 13
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<147 async-collective-start{14} @2>
 positions:
  async-collective-start {14}
  get-tuple-element.14
 uses:
  fusion.10, operand 14
 from instruction: %async-collective-start = (bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert.1), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.8
<148 param.1 @0>
 positions:
  param.1
 uses:
  convert, operand 0
 from instruction: %param.1 = f32[3584,4096]{1,0:T(8,128)} parameter(3), sharding={devices=[4,1]0,1,2,3}
<149 convert @1>
 positions:
  convert
 uses:
  all-gather.30, operand 0
 from instruction: %convert = bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} convert(f32[3584,4096]{1,0:T(8,128)} %param.1)
<150 all-gather.30 @0>
 positions:
  all-gather.30
 uses:
  fusion.10, operand 15
 from instruction: %all-gather.30 = bf16[14336,4096]{1,0:T(8,128)(2,1)} all-gather(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %convert), channel_id=2, replica_groups={{0,1,2,3}}, dimensions={0}, use_global_device_ids=true, frontend_attributes={async_collective_name="all-gather-start"}, backend_config={"flag_configs":[],"barrier_config":{"barrier_type":"CUSTOM","id":"1"},"scoped_memory_configs":[],"used_scoped_memory_configs":[]}
<151 param @0>
 positions:
  param
 uses:
  fusion.17, operand 16
  fusion.10, operand 16
 from instruction: %param = f32[32,512,4096]{2,1,0:T(8,128)} parameter(2), sharding={devices=[4,1,1]0,1,2,3}
<152 fusion.10{} @0>
 positions:
  fusion.10 {}
 uses:
  get-tuple-element.15, operand 0 {}
  get-tuple-element.16, operand 0 {}
  get-tuple-element.17, operand 0 {}
  get-tuple-element.31, operand 0 {}
  get-tuple-element.19, operand 0 {}
  get-tuple-element.20, operand 0 {}
  get-tuple-element.21, operand 0 {}
  get-tuple-element.22, operand 0 {}
  get-tuple-element.23, operand 0 {}
  get-tuple-element.24, operand 0 {}
  get-tuple-element.25, operand 0 {}
  get-tuple-element.26, operand 0 {}
  get-tuple-element.27, operand 0 {}
  get-tuple-element.28, operand 0 {}
  get-tuple-element.29, operand 0 {}
  get-tuple-element.30, operand 0 {}
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<153 fusion.10{0} @0>
 positions:
  fusion.10 {0}
  get-tuple-element.15
 uses:
  fusion, operand 0
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<154 fusion.10{1} @1>
 positions:
  fusion.10 {1}
  get-tuple-element.16
 uses:
  async-collective-done, operand 0
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<155 fusion.10{2} @0>
 positions:
  fusion.10 {2}
  get-tuple-element.17
 uses:
  async-collective-done, operand 1
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<156 fusion.10{3} @0>
 positions:
  fusion.10 {3}
 uses:
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<157 fusion.10{4} @4>
 positions:
  fusion.10 {4}
  get-tuple-element.19
 uses:
  async-collective-done, operand 2
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<158 fusion.10{5} @2>
 positions:
  fusion.10 {5}
  get-tuple-element.20
 uses:
  async-collective-done, operand 3
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<159 fusion.10{6} @2>
 positions:
  fusion.10 {6}
  get-tuple-element.21
 uses:
  async-collective-done, operand 4
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<160 fusion.10{7} @2>
 positions:
  fusion.10 {7}
  get-tuple-element.22
 uses:
  async-collective-done, operand 5
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<161 fusion.10{8} @2>
 positions:
  fusion.10 {8}
  get-tuple-element.23
 uses:
  async-collective-done, operand 6
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<162 fusion.10{9} @2>
 positions:
  fusion.10 {9}
  get-tuple-element.24
 uses:
  async-collective-done, operand 7
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<163 fusion.10{10} @2>
 positions:
  fusion.10 {10}
  get-tuple-element.25
 uses:
  async-collective-done, operand 8
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<164 fusion.10{11} @2>
 positions:
  fusion.10 {11}
  get-tuple-element.26
 uses:
  async-collective-done, operand 9
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<165 fusion.10{12} @2>
 positions:
  fusion.10 {12}
  get-tuple-element.27
 uses:
  async-collective-done, operand 10
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<166 fusion.10{13} @2>
 positions:
  fusion.10 {13}
  get-tuple-element.28
 uses:
  async-collective-done, operand 11
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<167 fusion.10{14} @2>
 positions:
  fusion.10 {14}
  get-tuple-element.29
 uses:
  async-collective-done, operand 12
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<168 fusion.10{15} @2>
 positions:
  fusion.10 {15}
  get-tuple-element.30
 uses:
  async-collective-done, operand 13
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<169 fusion.10{16} @2>
 positions:
  fusion.10 {16}
  get-tuple-element.31
 uses:
  async-collective-done, operand 14
 from instruction: %fusion.10 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, bf16[14336,4096]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.1, s32[2]{0:S(4)} %get-tuple-element.2, u32[]{:S(2)} %get-tuple-element.3, u32[]{:S(2)} %get-tuple-element.4, /*index=5*/u32[]{:S(2)} %get-tuple-element.5, u32[]{:S(2)} %get-tuple-element.6, u32[]{:S(2)} %get-tuple-element.7, u32[]{:S(2)} %get-tuple-element.8, u32[]{:S(2)} %get-tuple-element.9, /*index=10*/u32[]{:S(2)} %get-tuple-element.10, u32[]{:S(2)} %get-tuple-element.11, u32[]{:S(2)} %get-tuple-element.12, u32[]{:S(2)} %get-tuple-element.13, u32[]{:S(2)} %get-tuple-element.14, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %all-gather.30, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.10, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<170 param.3 @0>
 positions:
  param.3
 uses:
  convert.2, operand 0
 from instruction: %param.3 = f32[4096,3584]{1,0:T(8,128)} parameter(0), sharding={devices=[1,4]0,1,2,3}
<171 convert.2 @0>
 positions:
  convert.2
  copy-start {1}
 uses:
  copy-start, operand 0
  copy-done, operand 0 {1}
 from instruction: %convert.2 = bf16[4096,3584]{1,0:T(8,128)(2,1)} convert(f32[4096,3584]{1,0:T(8,128)} %param.3)
<172 copy-start{} @0>
 positions:
  copy-start {}
 uses:
  copy-done, operand 0 {}
 from instruction: %copy-start = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,3584]{1,0:T(8,128)(2,1)}, u32[]{:S(2)}) copy-start(bf16[4096,3584]{1,0:T(8,128)(2,1)} %convert.2)
<173 copy-start{0} @1>
 positions:
  copy-start {0}
  copy-done
 uses:
  copy-done, operand 0 {0}
  async-collective-start.1, operand 0
 from instruction: %copy-start = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,3584]{1,0:T(8,128)(2,1)}, u32[]{:S(2)}) copy-start(bf16[4096,3584]{1,0:T(8,128)(2,1)} %convert.2)
<174 copy-start{2} @2>
 positions:
  copy-start {2}
 uses:
  copy-done, operand 0 {2}
 from instruction: %copy-start = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,3584]{1,0:T(8,128)(2,1)}, u32[]{:S(2)}) copy-start(bf16[4096,3584]{1,0:T(8,128)(2,1)} %convert.2)
<175 async-collective-start.1{} @0>
 positions:
  async-collective-start.1 {}
 uses:
  get-tuple-element.32, operand 0 {}
  get-tuple-element.33, operand 0 {}
  get-tuple-element.34, operand 0 {}
  get-tuple-element.35, operand 0 {}
  get-tuple-element.36, operand 0 {}
  get-tuple-element.37, operand 0 {}
  get-tuple-element.38, operand 0 {}
  get-tuple-element.39, operand 0 {}
  get-tuple-element.40, operand 0 {}
  get-tuple-element.41, operand 0 {}
  get-tuple-element.42, operand 0 {}
  get-tuple-element.43, operand 0 {}
  get-tuple-element.44, operand 0 {}
  get-tuple-element.45, operand 0 {}
  get-tuple-element.46, operand 0 {}
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<176 async-collective-start.1{0} @1>
 positions:
  async-collective-start.1 {0}
  get-tuple-element.32
 uses:
  fusion.17, operand 0
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<177 async-collective-start.1{1} @0>
 positions:
  async-collective-start.1 {1}
  get-tuple-element.33
 uses:
  fusion.17, operand 1
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<178 async-collective-start.1{2} @4>
 positions:
  async-collective-start.1 {2}
  get-tuple-element.34
 uses:
  fusion.17, operand 2
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<179 async-collective-start.1{3} @2>
 positions:
  async-collective-start.1 {3}
  get-tuple-element.35
 uses:
  fusion.17, operand 3
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<180 async-collective-start.1{4} @2>
 positions:
  async-collective-start.1 {4}
  get-tuple-element.36
 uses:
  fusion.17, operand 4
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<181 async-collective-start.1{5} @2>
 positions:
  async-collective-start.1 {5}
  get-tuple-element.37
 uses:
  fusion.17, operand 5
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<182 async-collective-start.1{6} @2>
 positions:
  async-collective-start.1 {6}
  get-tuple-element.38
 uses:
  fusion.17, operand 6
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<183 async-collective-start.1{7} @2>
 positions:
  async-collective-start.1 {7}
  get-tuple-element.39
 uses:
  fusion.17, operand 7
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<184 async-collective-start.1{8} @2>
 positions:
  async-collective-start.1 {8}
  get-tuple-element.40
 uses:
  fusion.17, operand 8
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<185 async-collective-start.1{9} @2>
 positions:
  async-collective-start.1 {9}
  get-tuple-element.41
 uses:
  fusion.17, operand 9
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<186 async-collective-start.1{10} @2>
 positions:
  async-collective-start.1 {10}
  get-tuple-element.42
 uses:
  fusion.17, operand 10
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<187 async-collective-start.1{11} @2>
 positions:
  async-collective-start.1 {11}
  get-tuple-element.43
 uses:
  fusion.17, operand 11
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<188 async-collective-start.1{12} @2>
 positions:
  async-collective-start.1 {12}
  get-tuple-element.44
 uses:
  fusion.17, operand 12
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<189 async-collective-start.1{13} @2>
 positions:
  async-collective-start.1 {13}
  get-tuple-element.45
 uses:
  fusion.17, operand 13
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<190 async-collective-start.1{14} @2>
 positions:
  async-collective-start.1 {14}
  get-tuple-element.46
 uses:
  fusion.17, operand 14
 from instruction: %async-collective-start.1 = (bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %copy-done), kind=kCustom, output_to_operand_aliasing={{0}: (0, {})}, calls=%fused_computation.11
<191 async-collective-done @0>
 positions:
  async-collective-done
 uses:
  fusion.17, operand 15
 from instruction: %async-collective-done = bf16[14336,4096]{1,0:T(8,128)(2,1)} fusion(bf16[3584,4096]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.16, bf16[14336,4096]{1,0:T(8,128)(2,1)} %get-tuple-element.17, s32[2]{0:S(4)} %get-tuple-element.19, u32[]{:S(2)} %get-tuple-element.20, u32[]{:S(2)} %get-tuple-element.21, /*index=5*/u32[]{:S(2)} %get-tuple-element.22, u32[]{:S(2)} %get-tuple-element.23, u32[]{:S(2)} %get-tuple-element.24, u32[]{:S(2)} %get-tuple-element.25, u32[]{:S(2)} %get-tuple-element.26, /*index=10*/u32[]{:S(2)} %get-tuple-element.27, u32[]{:S(2)} %get-tuple-element.28, u32[]{:S(2)} %get-tuple-element.29, u32[]{:S(2)} %get-tuple-element.30, u32[]{:S(2)} %get-tuple-element.31), kind=kCustom, output_to_operand_aliasing={{}: (1, {})}, calls=%fused_computation.10
<192 fusion.17{} @0>
 positions:
  fusion.17 {}
 uses:
  get-tuple-element.47, operand 0 {}
  get-tuple-element.48, operand 0 {}
  get-tuple-element.49, operand 0 {}
  get-tuple-element.63, operand 0 {}
  get-tuple-element.51, operand 0 {}
  get-tuple-element.52, operand 0 {}
  get-tuple-element.53, operand 0 {}
  get-tuple-element.54, operand 0 {}
  get-tuple-element.55, operand 0 {}
  get-tuple-element.56, operand 0 {}
  get-tuple-element.57, operand 0 {}
  get-tuple-element.58, operand 0 {}
  get-tuple-element.59, operand 0 {}
  get-tuple-element.60, operand 0 {}
  get-tuple-element.61, operand 0 {}
  get-tuple-element.62, operand 0 {}
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<193 fusion.17{0} @0>
 positions:
  fusion.17 {0}
  get-tuple-element.47
 uses:
  fusion, operand 1
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<194 fusion.17{1} @1>
 positions:
  fusion.17 {1}
  get-tuple-element.48
 uses:
  async-collective-done.1, operand 0
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<195 fusion.17{2} @0>
 positions:
  fusion.17 {2}
  get-tuple-element.49
 uses:
  async-collective-done.1, operand 1
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<196 fusion.17{3} @0>
 positions:
  fusion.17 {3}
 uses:
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<197 fusion.17{4} @4>
 positions:
  fusion.17 {4}
  get-tuple-element.51
 uses:
  async-collective-done.1, operand 2
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<198 fusion.17{5} @2>
 positions:
  fusion.17 {5}
  get-tuple-element.52
 uses:
  async-collective-done.1, operand 3
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<199 fusion.17{6} @2>
 positions:
  fusion.17 {6}
  get-tuple-element.53
 uses:
  async-collective-done.1, operand 4
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<200 fusion.17{7} @2>
 positions:
  fusion.17 {7}
  get-tuple-element.54
 uses:
  async-collective-done.1, operand 5
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<201 fusion.17{8} @2>
 positions:
  fusion.17 {8}
  get-tuple-element.55
 uses:
  async-collective-done.1, operand 6
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<202 fusion.17{9} @2>
 positions:
  fusion.17 {9}
  get-tuple-element.56
 uses:
  async-collective-done.1, operand 7
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<203 fusion.17{10} @2>
 positions:
  fusion.17 {10}
  get-tuple-element.57
 uses:
  async-collective-done.1, operand 8
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<204 fusion.17{11} @2>
 positions:
  fusion.17 {11}
  get-tuple-element.58
 uses:
  async-collective-done.1, operand 9
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<205 fusion.17{12} @2>
 positions:
  fusion.17 {12}
  get-tuple-element.59
 uses:
  async-collective-done.1, operand 10
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<206 fusion.17{13} @2>
 positions:
  fusion.17 {13}
  get-tuple-element.60
 uses:
  async-collective-done.1, operand 11
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<207 fusion.17{14} @2>
 positions:
  fusion.17 {14}
  get-tuple-element.61
 uses:
  async-collective-done.1, operand 12
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<208 fusion.17{15} @2>
 positions:
  fusion.17 {15}
  get-tuple-element.62
 uses:
  async-collective-done.1, operand 13
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<209 fusion.17{16} @2>
 positions:
  fusion.17 {16}
  get-tuple-element.63
 uses:
  async-collective-done.1, operand 14
 from instruction: %fusion.17 = (f32[32,512,14336]{2,1,0:T(8,128)}, bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, bf16[4096,14336]{1,0:T(8,128)(2,1)}, s32[2]{0:S(4)}, /*index=5*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=10*/u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, u32[]{:S(2)}, /*index=15*/u32[]{:S(2)}, u32[]{:S(2)}) fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.32, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.33, s32[2]{0:S(4)} %get-tuple-element.34, u32[]{:S(2)} %get-tuple-element.35, u32[]{:S(2)} %get-tuple-element.36, /*index=5*/u32[]{:S(2)} %get-tuple-element.37, u32[]{:S(2)} %get-tuple-element.38, u32[]{:S(2)} %get-tuple-element.39, u32[]{:S(2)} %get-tuple-element.40, u32[]{:S(2)} %get-tuple-element.41, /*index=10*/u32[]{:S(2)} %get-tuple-element.42, u32[]{:S(2)} %get-tuple-element.43, u32[]{:S(2)} %get-tuple-element.44, u32[]{:S(2)} %get-tuple-element.45, u32[]{:S(2)} %get-tuple-element.46, /*index=15*/bf16[14336,4096]{1,0:T(8,128)(2,1)} %async-collective-done, f32[32,512,4096]{2,1,0:T(8,128)} %param), kind=kOutput, output_to_operand_aliasing={{1}: (0, {}), {2}: (1, {}), {3}: (1, {}), {4}: (2, {}), {5}: (3, {}), {6}: (4, {}), {7}: (5, {}), {8}: (6, {}), {9}: (7, {}), {10}: (8, {}), {11}: (9, {}), {12}: (10, {}), {13}: (11, {}), {14}: (12, {}), {15}: (13, {}), {16}: (14, {})}, calls=%async_collective_fusion.17, backend_config={"flag_configs":[],"scoped_memory_configs":[],"continuation_config":{"output_tuple_original_start":"0","output_tuple_original_end":"0","operand_original_start":"15","operand_original_end":"16"},"used_scoped_memory_configs":[]}
<210 async-collective-done.1 @0>
 positions:
  async-collective-done.1
 uses:
  fusion, operand 2
 from instruction: %async-collective-done.1 = bf16[4096,14336]{1,0:T(8,128)(2,1)} fusion(bf16[4096,3584]{1,0:T(8,128)(2,1)S(1)} %get-tuple-element.48, bf16[4096,14336]{1,0:T(8,128)(2,1)} %get-tuple-element.49, s32[2]{0:S(4)} %get-tuple-element.51, u32[]{:S(2)} %get-tuple-element.52, u32[]{:S(2)} %get-tuple-element.53, /*index=5*/u32[]{:S(2)} %get-tuple-element.54, u32[]{:S(2)} %get-tuple-element.55, u32[]{:S(2)} %get-tuple-element.56, u32[]{:S(2)} %get-tuple-element.57, u32[]{:S(2)} %get-tuple-element.58, /*index=10*/u32[]{:S(2)} %get-tuple-element.59, u32[]{:S(2)} %get-tuple-element.60, u32[]{:S(2)} %get-tuple-element.61, u32[]{:S(2)} %get-tuple-element.62, u32[]{:S(2)} %get-tuple-element.63), kind=kCustom, output_to_operand_aliasing={{}: (1, {})}, calls=%fused_computation.13
<211 fusion @0>
 positions:
  fusion
  tuple {0}
 uses:
  tuple, operand 0
 from instruction: %fusion = f32[32,512,4096]{2,1,0:T(8,128)} fusion(f32[32,512,14336]{2,1,0:T(8,128)} %get-tuple-element.15, f32[32,512,14336]{2,1,0:T(8,128)} %get-tuple-element.47, bf16[4096,14336]{1,0:T(8,128)(2,1)} %async-collective-done.1), kind=kOutput, calls=%fused_computation.1
<212 tuple{} @0>
 positions:
  tuple {}
 uses:
 from instruction: %tuple = (f32[32,512,4096]{2,1,0:T(8,128)}) tuple(f32[32,512,4096]{2,1,0:T(8,128)} %fusion)


HloLiveRange (max 80):
  InstructionSequence:
    0:param.1
    1:param.2
    2:param.3
    3:param
    4:convert
    5:convert.1
    6:convert.2
    7:all-gather.30
    8:async-collective-start
    9:get-tuple-element.14
    10:get-tuple-element.13
    11:get-tuple-element.12
    12:get-tuple-element.11
    13:get-tuple-element.10
    14:get-tuple-element.9
    15:get-tuple-element.8
    16:get-tuple-element.7
    17:get-tuple-element.6
    18:get-tuple-element.5
    19:get-tuple-element.4
    20:get-tuple-element.3
    21:get-tuple-element.2
    22:get-tuple-element.1
    23:get-tuple-element
    24:fusion.10
    25:get-tuple-element.31
    26:get-tuple-element.30
    27:get-tuple-element.29
    28:get-tuple-element.28
    29:get-tuple-element.27
    30:get-tuple-element.26
    31:get-tuple-element.25
    32:get-tuple-element.24
    33:get-tuple-element.23
    34:get-tuple-element.22
    35:get-tuple-element.21
    36:get-tuple-element.20
    37:get-tuple-element.19
    38:get-tuple-element.17
    39:get-tuple-element.16
    40:copy-start
    41:async-collective-done
    42:copy-done
    43:async-collective-start.1
    44:get-tuple-element.46
    45:get-tuple-element.45
    46:get-tuple-element.44
    47:get-tuple-element.43
    48:get-tuple-element.42
    49:get-tuple-element.41
    50:get-tuple-element.40
    51:get-tuple-element.39
    52:get-tuple-element.38
    53:get-tuple-element.37
    54:get-tuple-element.36
    55:get-tuple-element.35
    56:get-tuple-element.34
    57:get-tuple-element.33
    58:get-tuple-element.32
    59:fusion.17
    60:get-tuple-element.63
    61:get-tuple-element.62
    62:get-tuple-element.61
    63:get-tuple-element.60
    64:get-tuple-element.59
    65:get-tuple-element.58
    66:get-tuple-element.57
    67:get-tuple-element.56
    68:get-tuple-element.55
    69:get-tuple-element.54
    70:get-tuple-element.53
    71:get-tuple-element.52
    72:get-tuple-element.51
    73:get-tuple-element.49
    74:get-tuple-element.48
    75:async-collective-done.1
    76:get-tuple-element.47
    77:get-tuple-element.15
    78:fusion
    79:tuple
  BufferLiveRange:
    param.2{}:0-80
    convert.1{}:5-8
    async-collective-start{}:8-23
    async-collective-start{0}:8-24
    async-collective-start{1}:8-24
    async-collective-start{2}:8-24
    async-collective-start{3}:8-24
    async-collective-start{4}:8-24
    async-collective-start{5}:8-24
    async-collective-start{6}:8-24
    async-collective-start{7}:8-24
    async-collective-start{8}:8-24
    async-collective-start{9}:8-24
    async-collective-start{10}:8-24
    async-collective-start{11}:8-24
    async-collective-start{12}:8-24
    async-collective-start{13}:8-24
    async-collective-start{14}:8-24
    param.1{}:0-80
    convert{}:4-7
    all-gather.30{}:7-24
    param{}:0-80
    fusion.10{}:24-77
    fusion.10{0}:24-78
    fusion.10{1}:24-41
    fusion.10{2}:24-41
    fusion.10{3}:24-24
    fusion.10{4}:24-41
    fusion.10{5}:24-41
    fusion.10{6}:24-41
    fusion.10{7}:24-41
    fusion.10{8}:24-41
    fusion.10{9}:24-41
    fusion.10{10}:24-41
    fusion.10{11}:24-41
    fusion.10{12}:24-41
    fusion.10{13}:24-41
    fusion.10{14}:24-41
    fusion.10{15}:24-41
    fusion.10{16}:24-41
    param.3{}:0-80
    convert.2{}:6-42
    copy-start{}:40-42
    copy-start{0}:40-43
    copy-start{2}:40-42
    async-collective-start.1{}:43-58
    async-collective-start.1{0}:43-59
    async-collective-start.1{1}:43-59
    async-collective-start.1{2}:43-59
    async-collective-start.1{3}:43-59
    async-collective-start.1{4}:43-59
    async-collective-start.1{5}:43-59
    async-collective-start.1{6}:43-59
    async-collective-start.1{7}:43-59
    async-collective-start.1{8}:43-59
    async-collective-start.1{9}:43-59
    async-collective-start.1{10}:43-59
    async-collective-start.1{11}:43-59
    async-collective-start.1{12}:43-59
    async-collective-start.1{13}:43-59
    async-collective-start.1{14}:43-59
    async-collective-done{}:41-59
    fusion.17{}:59-76
    fusion.17{0}:59-78
    fusion.17{1}:59-75
    fusion.17{2}:59-75
    fusion.17{3}:59-59
    fusion.17{4}:59-75
    fusion.17{5}:59-75
    fusion.17{6}:59-75
    fusion.17{7}:59-75
    fusion.17{8}:59-75
    fusion.17{9}:59-75
    fusion.17{10}:59-75
    fusion.17{11}:59-75
    fusion.17{12}:59-75
    fusion.17{13}:59-75
    fusion.17{14}:59-75
    fusion.17{15}:59-75
    fusion.17{16}:59-75
    async-collective-done.1{}:75-78
    fusion{}:78-80
    tuple{}:79-80
  Live ranges at 78 (peak):
    param.2: 58720256 bytes
    param.1: 58720256 bytes
    param: 268435456 bytes
    fusion.10: 136 bytes
    param.3: 58720256 bytes
    fusion.17: 136 bytes
    async-collective-done.1: 117440512 bytes
    fusion: 268435456 bytes
